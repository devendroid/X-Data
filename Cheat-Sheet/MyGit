
BASICS:================

git clone <repository name> //Take clone of any repository

git status //Check modified files/folders

git branch //Check current branch

git branch -a //Check list of all branches 

git fetch -a //Fetch new added branches

git add <modified file1> <modified file2> //Add your changes in git (on local)

git commit -m "Message about your work" //Commit your changes in git (on local)

git push //Push your changes on git (on server)


REBASE:================

eg:- If you want to rebase from "staging" to "feature" branch 

WAY-1 ---------------------------------------
(This is a multi step process to take rebase)
git checkout <staging> //Switch to other branch

git pull //Take latest pull in same branch (Make working tree clean before use this)

git checkout <feature>

git rebase <staging> //Take latest pull from different branch (Make working tree clean before use this)

OR WAY-2 -------------------------------------
(This is a single step process to take rebase)

git pull --rebase origin <staging>

//After take rebase (either way-1 or way2) if no conflict found so just do push
git push

//After take rebase (either way-1 or way2) if found conflict fix manuall then check status
git status
git add <modifid files> 
git commit -m "Fixed conflicts"
git rebase --continue //Use this command until you not found any more conflict

// After complete rebase with conflict fix, push the code
git push -f //Use force push because after conflic fix normal push can eject


STASH:=============

git stash save "message to your work" //Save in stash

git stash list //List of your saved stash

git stash apply stash@{0} //Restore your work from stash

TAG:========================

// How to push tag fro trigger build?
git pull          // take latest pull in the branch
git tag -l       // show all previous tags
git tag -a vx.y.z -m "Add a description of what is being added in this release"     // create tag
git push --tags     // push tag


UPDATE:=======================

// Update last pushed commit message
git commit -m  "YOUR UPDATED MESSAGE" --amend --no-edit
git push -f


CONFIG:============

git config --list  //To see configuration
git config user.name "Full Name" //Change name to current repo only
git config user.email "email@address.com" //Change email to current repo only
git config --global user.name "Full Name" //Change name to globally
git config --global user.email "email@address.com" //Change email to globally

PUSH IN WRONG BRANCH ? ===========================
(If you pushe din wrong branch, the how to fix this issue)

WAY-1 ---------------------------------------
git reset --soft HEAD^ //Get back your last pushed commit
git checkout correct-branch //Switch to your correct branch
git push //Now push commit normally, if unable to push use force push using git push -f 

OR WAY-2 ------------------------------------
git checkout correct-branch //Switch to your correct branch 
git cherry-pick 65c356c8c //Transfer your pushed commit into your right branch
git push //Now push commit normally, if unable to push use force push using git push -f 

git checkout wrong-branch //Switch to back your wrong branch
git reset --hard HEAD~1 //Remove your last one pushed commit from wrong branch 
git push //Now push commit normally, if unable to push use force push using git push -f 

UNDO LOCAL COMMIT========

git reset HEAD^ // Where ^ demote your last commits

UNDO LOCAL ADD==========

git reset <file>





